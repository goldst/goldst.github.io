import Options, { IOptionsInput } from './Options';
export interface ICommandOptions {
    desc: string;
    alias?: string | string[];
    examples?: string[];
    [k: string]: any;
}
export interface ICommand extends ICommandOptions {
    name: string;
    desc: string;
    names: string[];
}
export declare type CommandHandler = (input: string[], flags: {
    [k: string]: any;
}) => any | Promise<any>;
export default class Command {
    command: ICommand;
    options: Options;
    handler?: CommandHandler;
    constructor(name: string, opt: ICommandOptions | string, handler?: CommandHandler);
    option(name: string, opt: string | IOptionsInput): this;
}
